{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAEhCC,EAAgB,SAACC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,sBAAqCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEnDG,EAAO,qBAAoCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAElDA,E,KAyBPL,EAAOc,iBAAiB,UArBxB,SAAsBC,GACpBA,EAAEC,iBASF,IARA,IAEYC,EAARF,EAAEG,OADJC,SAAYd,EAAKY,EAALZ,MAAOe,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAGvBC,EAAUC,OAAOlB,EAAMmB,OACvBC,EAASF,OAAOH,EAAKI,OACrBE,EAAWH,OAAOF,EAAOG,OAEpBG,EAAI,EAAGA,GAAKD,EAAUC,GAAK,EAClCxB,EAAcwB,EAAGL,GACdM,MAAK,SAAAC,GACJC,EAAAhC,GAASiC,OAAOC,QAAQH,E,IAEzBI,OAAM,SAAAC,G,OAAOJ,EAAAhC,GAASiC,OAAOI,QAAQD,E,IACxCZ,GAAWG,EAEbV,EAAEG,OAAOkB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(` Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(` Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n};\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = e.target;\n\n  let delayEl = Number(delay.value);\n  let stepEl = Number(step.value);\n  let amountEl = Number(amount.value);\n\n  for (let i = 1; i <= amountEl; i += 1) {\n    createPromise(i, delayEl)\n      .then(result => {\n        Notiflix.Notify.success(result);\n      })\n      .catch(err => Notiflix.Notify.failure(err));\n    delayEl += stepEl;\n  }\n  e.target.reset();\n}\n\nformEl.addEventListener('submit', onFormSubmit);"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","e","preventDefault","_elements","target","elements","step","amount","delayEl","Number","value","stepEl","amountEl","i","then","result","$parcel$interopDefault","Notify","success","catch","err","failure","reset"],"version":3,"file":"03-promises.9ed7ccb1.js.map"}